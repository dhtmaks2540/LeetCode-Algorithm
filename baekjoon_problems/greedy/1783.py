"""
최대로 움직일 수 있는 방법을 고안해서 위아래로 2칸씩 이동할 수 있다면
세로로 2칸, 가로로 1칸 이동하는 방식으로 풀이했다. 다만 문제가 좀 이해하기 어렵게 쓴 경향이 있는것같다..
이런 문제가 있다면 좀 짜증나는 문제인듯하다..

1. 세로가 1이면 나이트는 이동할 수 없기에 최대 칸 수는 1이다(시작위치)

2. 세로가 2인 경우 세로로 2칸, 가로로 1칸 이동은 불가능하므로 세로로 1칸, 가로로 2칸 이동하는
방법을 채택하는데 이동 방법을 모두 한 번씩 사용할 수 없으므로 이동 횟수는 4번보다 적어야 한다.
따라서 2칸씩 이동하는 방법과 4중 최솟값을 출력한다.

3. 세로가 3 이상이며 가로가 7 미만인 경우는 위와 똑같이 이동 방법을 모두 한 번씩 사용할 수 없으므로
이동 횟수는 4번보다 적어야 하지만 세로 2칸, 가로 1칸으로 이동할 수 있다. 따라서 이 두 값 중
더 작은값을 출력한다.

4. 그 외의 경우는 4가지 방법을 모두 사용한 후 세로 2칸, 가로 1칸씩 이동하느 경우의 수를
체크하면된다. 

문제 이해를 잘하고 그리디하게 접근하는 방법을 빠르게 생각해내는게 중요한 문제인것같다...

"""

# 세로, 가로
N, M = map(int, input().split(" "))

if N == 1: # 세로가 1이라면 못움직임
    print(1)
elif N == 2: # 세로가 2인 경우
    print(min(4, (M + 1) // 2))
elif M < 7: # 가로가 7 미만인 경우 최대 칸수는 4와 M 중 작은 값
    print(min(4, M))
else: # 그 외(세로 2이상이며 가로 7이상인 경우 4가지 방법으로 방문한 후 세로 2, 가로 1로 이동)
    print(M - 7 + 5)