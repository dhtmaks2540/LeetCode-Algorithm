import sys

"""
https://it-college-diary.tistory.com/entry/%EA%B7%B8%EB%A6%AC%EB%94%94-%EC%95%8C%EA%B3%A0%EB%A6%AC%EC%A6%98-%EB%B0%B1%EC%A4%80-2875%EB%B2%88-%EB%8C%80%ED%9A%8C-or-%EC%9D%B8%ED%84%B4

문제를 보고 최대의 팀수를 구하면 된다고 하기에 인턴쉽 인원을 빼고 여학생과 남학생으로 최대한 팀원을
이루도록 그리디하게 접근하자 라는 생각을 떠올렸다. 따라서 이를 코드로 구현하여 우선 최대의 개수로
팀을 만들고, 남은 인원들로 인턴쉽을 보낸다. 그리고 K가 0보다 큰 동안에 팀을 하나씩 해제하며 
인턴쉽 인원을 충당하는 방식으로 풀이했다. 다만 이 방식으로 반례가 발생하였는데 반례를 찾지 못했다..

각 팀은 2명의 여학생과 1명의 남학생으로 구성되기에 N명의 여학생과 M명의 남학생으로 만들 수 있는
최대 팀 수는 N // 2와 M 중 작은 값과 같다. K번의 단계를 통해 min(N // 2, M)중 최댓값에서 한명을
제외하며 K명을 제거하는 것이 각 단계의 최적 선택이다.

N명의 여학생과 M명의 남학생 중 인턴쉽에 참여할 K명을 빼고 대회에 나갈 팀원만 남겨야 한다.
따라서 각 단계에서는 N과 M 중 어떤 것에서 1을 뺄 것인가를 선택한다.
만약 N//2가 M보다 크면 N에서 1을 빼주고, 그렇지 않으면 M에서 1을 빼는 것을 반복한다.
K번의 반복이 종료되면 N//2와 M 중 작은 값을 출력한다.
"""

def solution1():
    # 여학생의 수, 남학생의 수, 인턴쉽 인원
    N, M, K = map(int, sys.stdin.readline().strip().split(" "))
    team_num = 0
    # 최대로 만들 수 있는 팀 만들기
    if N // 2 < M: # N을 2로 나눈 수보다 M이 더 크다면(남학생이 남는다면)
        team_num = N // 2
    else: # 여학생이 남는다면
        team_num = M

    # 전체에서 최대팀의 수를 제외한 나머지 값을 K에서 뺀다.
    K -= N + M - 3 * team_num

    # K가 0보다 크다면
    # 3으로 나눈 몫만큼 최대팀에서 빼준다.
    if K > 0:
        K -= 1
        team_num -= K // 3 + 1
        
    print(team_num)
    
def solution2():
    # 여학생의 수, 남학생의 수, 인턴쉽 인원
    N, M, K = map(int, sys.stdin.readline().strip().split(" "))
    
    for _ in range(K):
        # 여학생의 수가 더 많다면
        if N // 2 >= M:
            N -= 1
        # 남학생의 수가 더 많다면
        else:
            M -= 1
    # 최대의 팀 구성
    print(min(N // 2, M))
    
solution2()